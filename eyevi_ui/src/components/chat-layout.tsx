"use client";

import React, { useRef, useState, useEffect } from "react";
import Sidebar from "./sidebar";
import ChatContainer, { ChatContainerRef } from "./chat-container";
import WelcomeBanner from "./welcome-banner";
import { useChatApi } from "@/hooks/useChatApi";

const ChatLayout = () => {
  const { createNewSession, clearChatHistory, sessionId } = useChatApi();
  const chatContainerRef = useRef<ChatContainerRef>(null);
  const [showWelcomeBanner, setShowWelcomeBanner] = useState(true);

  // Banner lu√¥n hi·ªÉn th·ªã khi m·ªü app, ch·ªâ ·∫©n khi user nh·∫•n "Chat ngay" ho·∫∑c "T·∫°o cu·ªôc tr√≤ chuy·ªán m·ªõi"
  useEffect(() => {
    console.log("üéâ App loaded, showing welcome banner by default");
    setShowWelcomeBanner(true);
  }, []);

  const handleNewChat = async () => {
    console.log("üÜï Creating new chat from sidebar");

    // ·∫®n banner n·∫øu ƒëang hi·ªÉn th·ªã
    setShowWelcomeBanner(false);

    // Reset ChatContainer tr∆∞·ªõc khi t·∫°o session m·ªõi
    chatContainerRef.current?.resetChat();

    // T·∫°o session m·ªõi
    const newSessionId = await createNewSession();
    console.log("‚úÖ New chat created with session:", newSessionId);
  };

  const handleClearHistory = async () => {
    await clearChatHistory();
  };

  const handleLoadHistory = (sessionId: string) => {
    chatContainerRef.current?.loadHistoryBySessionId(sessionId);
  };

  const handleStartChat = async () => {
    console.log("üöÄ Starting new chat from welcome banner");

    // Reset ChatContainer tr∆∞·ªõc
    chatContainerRef.current?.resetChat();

    // T·∫°o session m·ªõi
    const newSessionId = await createNewSession();

    if (newSessionId) {
      // Ch·ªâ ·∫©n banner khi t·∫°o session th√†nh c√¥ng
      setShowWelcomeBanner(false);
      console.log("‚úÖ Welcome banner hidden, new session created:", newSessionId);
    } else {
      console.error("‚ùå Failed to create session, keeping banner visible");
    }
  };

  return (
    <div className="flex min-h-screen w-full relative">
      <Sidebar
        sessionId={sessionId}
        onNewChat={handleNewChat}
        onClearHistory={handleClearHistory}
        onLoadHistory={handleLoadHistory}
      />
      <ChatContainer ref={chatContainerRef} />

      {/* Welcome Banner Overlay */}
      {showWelcomeBanner && (
        <WelcomeBanner onStartChat={handleStartChat} />
      )}
    </div>
  );
};

export default ChatLayout; 